name: Publish Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version (e.g. 1.2.3, 1.2.3-beta.0)'
        required: true

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Authenticate with npm
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Install dependencies
        run: npm ci

      - name: Bump version in all packages
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          for dir in packages/*; do
            if [ -f "$dir/package.json" ]; then
              echo "Updating $dir to version $VERSION"
              npm version $VERSION --no-git-tag-version --prefix $dir
            fi
          done

          # Обновляем зависимости между локальными пакетами
          for dir in packages/*; do
            if [ -f "$dir/package.json" ]; then
              for dep in $(jq -r '.dependencies // {} | keys[]' $dir/package.json); do
                if [ -f "packages/$dep/package.json" ]; then
                  echo "Updating dependency $dep in $dir"
                  jq --arg dep "$dep" --arg ver "$VERSION" \
                    '.dependencies[$dep] = $ver' \
                    $dir/package.json > $dir/package.json.tmp && mv $dir/package.json.tmp $dir/package.json
                fi
              done
            fi
          done

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add packages/*/package.json
          git commit -m "chore(release): bump version to $VERSION"
          git tag v$VERSION
          git push origin HEAD:master --tags

      - name: Publish all packages
        run: |
          for dir in packages/*; do
            if [ -f "$dir/package.json" ]; then
              echo "Publishing $dir"
              npm publish --access public --workspace $dir || true
            fi
          done
